name: Build OmniPull macOS DMG

on:
  push:
    branches:
      - macOS
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-13  # Safer fallback for Intel + older macOS support

    defaults:
      run:
        working-directory: macOS

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build OmniPull executable for Intel (x86_64)
        run: |
          arch -x86_64 pyinstaller main.py \
            --noconfirm \
            --onefile \
            --windowed \
            --name OmniPull \
            --icon icons/logo.icns \
            --add-data "modules/translations:translations"

      - name: Create OmniPull.app bundle manually
        run: |
          rm -rf dist/OmniPull.app
          mkdir -p dist/OmniPull.app/Contents/MacOS
          cp dist/OmniPull dist/OmniPull.app/Contents/MacOS/OmniPull
          chmod +x dist/OmniPull.app/Contents/MacOS/OmniPull

          cat <<EOF > dist/OmniPull.app/Contents/Info.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleName</key>
              <string>OmniPull</string>
              <key>CFBundleDisplayName</key>
              <string>OmniPull</string>
              <key>CFBundleExecutable</key>
              <string>OmniPull</string>
              <key>CFBundleIdentifier</key>
              <string>com.omnipull.app</string>
              <key>CFBundleVersion</key>
              <string>1.0</string>
              <key>CFBundlePackageType</key>
              <string>APPL</string>
          </dict>
          </plist>
          EOF

      - name: Verify app bundle structure
        run: ls -R dist/OmniPull.app

      - name: Install appdmg
        run: npm install -g appdmg

      - name: Confirm background image exists
        run: ls -l icons/logo4.png

      - name: Prepare for DMG creation
        run: cp -R dist/OmniPull.app OmniPull.app

      - name: Create DMG using appdmg
        run: |
          appdmg appdmg.json dist/OmniPull.dmg

      - name: Upload DMG as artifact
        uses: actions/upload-artifact@v4
        with:
          name: OmniPull-dmg-${{ github.sha }}
          path: macOS/dist/OmniPull.dmg
